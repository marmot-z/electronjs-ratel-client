name: build test

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build_win:
    name: Build on ${{ matrix.os }} node v${{ matrix.node-version }}
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [windows-latest]
        node-version: [14.x]

    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v2
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    - name: build
      run: |
          npm install --save-dev @electron-forge/cli
          npx electron-forge import
          npm run make
    - name: Upload a Build Artifact
      uses: actions/upload-artifact@v2.3.1
      with:
        name: electronjs-ratel-client_output-${{ matrix.os }}-node${{ matrix.node-version }}
        path: out/
  
  build_buntu:
    name: Build on ${{ matrix.os }} node v${{ matrix.node-version }}
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest]
        node-version: [14.x]

    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v2
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    - run: npm ci
    - name: build
      run: |
          npm install --save-dev @electron-forge/cli
          npx electron-forge import
          npm run make
    - name: Upload a Build Artifact
      uses: actions/upload-artifact@v2.3.1
      with:
        name: electronjs-ratel-client_output-${{ matrix.os }}-node${{ matrix.node-version }}
        path: out/
    
  build_mac:
    name: Build on ${{ matrix.os }} node v${{ matrix.node-version }}
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [macos-latest]
        node-version: [14.x]

    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v2
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    - name: build
      run: |
          npm install --save-dev @electron-forge/cli
          npx electron-forge import
          npm run make
    - name: Upload a Build Artifact
      uses: actions/upload-artifact@v2.3.1
      with:
        name: electronjs-ratel-client_output-${{ matrix.os }}-node${{ matrix.node-version }}
        path: out/
